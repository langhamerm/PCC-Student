{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Pre-Deployment: Make sure to change the lines of code in your server.js to the ones below, make sure not to have extra PORT and mongoose.connect: (edited)\
\
var PORT = process.env.PORT || 3000;\
\
var MONGODB_URI = process.env.MONGODB_URI || "mongodb://localhost/mongoHeadlines";\
\
mongoose.connect(MONGODB_URI);\
\
Here are the steps to deploy:\
1. Create a Heroku app in your project directory by typing: heroku create yournamescrape-live1.\
Run this command in your Terminal/Bash window:\
\
2. Type: heroku addons:create mongolab\
//This command will add the free mLab provision to your project.\
\
3. check to see if the heroku repo is created by typing: git remote -v\
if you see heroku repo, then do the following:\
\
4. git add -A\
\
5. git commit -am "deployed"\
\
6. git push heroku master\
\
if you get a failed deployment, do the following:\
\
delete node_modules, package-lock.json, and package.json\
\
type: npm install express morgan mongoose express-handlebars axios cheerio (edited)\
\
type: npm init -y (edited)\
\
Run the program first so article and note schemas are created. Then open server.js and look for a line of code with no code and add an extra space. It needs the latest changes. Then proceed with git commands below.\
\
then do the following git commands from step 4 to 6. Remember to make .gitignore empty before deploying to heroku}