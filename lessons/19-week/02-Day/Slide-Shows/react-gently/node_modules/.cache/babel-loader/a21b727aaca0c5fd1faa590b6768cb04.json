{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _range2 = require(\"lodash/range\");\n\nvar _range3 = _interopRequireDefault(_range2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  circle: function circle(x, y, size) {\n    var s = Math.round(size);\n    return \"M \" + Math.round(x) + \", \" + Math.round(y) + \" m \" + -s + \", 0\\n      a \" + s + \", \" + s + \" 0 1,0 \" + s * 2 + \",0\\n      a \" + s + \", \" + s + \" 0 1,0 \" + -s * 2 + \",0\";\n  },\n  square: function square(x, y, size) {\n    var baseSize = 0.87 * size;\n    var x0 = Math.round(x - baseSize);\n    var x1 = Math.round(x + baseSize);\n    var y0 = Math.round(y - baseSize);\n    var y1 = Math.round(y + baseSize);\n    return \"M \" + x0 + \", \" + y1 + \"\\n      L \" + x1 + \", \" + y1 + \"\\n      L \" + x1 + \", \" + y0 + \"\\n      L \" + x0 + \", \" + y0 + \"\\n      z\";\n  },\n  diamond: function diamond(x, y, size) {\n    var baseSize = 0.87 * size;\n    var length = Math.sqrt(2 * (baseSize * baseSize));\n    return \"M \" + Math.round(x) + \", \" + Math.round(y + length) + \"\\n      L \" + Math.round(x + length) + \", \" + Math.round(y) + \"\\n      L \" + Math.round(x) + \", \" + Math.round(y - length) + \"\\n      L \" + Math.round(x - length) + \", \" + Math.round(y) + \"\\n      z\";\n  },\n  triangleDown: function triangleDown(x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = Math.round(x - size);\n    var x1 = Math.round(x + size);\n    var y0 = Math.round(y - size);\n    var y1 = Math.round(y + height);\n    return \"M \" + x0 + \", \" + y0 + \"\\n      L \" + x1 + \", \" + y0 + \"\\n      L \" + Math.round(x) + \", \" + y1 + \"\\n      z\";\n  },\n  triangleUp: function triangleUp(x, y, size) {\n    var height = size / 2 * Math.sqrt(3);\n    var x0 = Math.round(x - size);\n    var x1 = Math.round(x + size);\n    var y0 = Math.round(y - height);\n    var y1 = Math.round(y + size);\n    return \"M \" + x0 + \", \" + y1 + \"\\n      L \" + x1 + \", \" + y1 + \"\\n      L \" + Math.round(x) + \", \" + y0 + \"\\n      z\";\n  },\n  plus: function plus(x, y, size) {\n    var baseSize = 1.1 * size;\n    return \"M \" + Math.round(x - baseSize / 2.5) + \", \" + Math.round(y + baseSize) + \"\\n      L \" + Math.round(x + baseSize / 2.5) + \", \" + Math.round(y + baseSize) + \"\\n      L \" + Math.round(x + baseSize / 2.5) + \", \" + Math.round(y + baseSize / 2.5) + \"\\n      L \" + Math.round(x + baseSize) + \", \" + Math.round(y + baseSize / 2.5) + \"\\n      L \" + Math.round(x + baseSize) + \", \" + Math.round(y - baseSize / 2.5) + \"\\n      L \" + Math.round(x + baseSize / 2.5) + \", \" + Math.round(y - baseSize / 2.5) + \"\\n      L \" + Math.round(x + baseSize / 2.5) + \", \" + Math.round(y - baseSize) + \"\\n      L \" + Math.round(x - baseSize / 2.5) + \", \" + Math.round(y - baseSize) + \"\\n      L \" + Math.round(x - baseSize / 2.5) + \", \" + Math.round(y - baseSize / 2.5) + \"\\n      L \" + Math.round(x - baseSize) + \", \" + Math.round(y - baseSize / 2.5) + \"\\n      L \" + Math.round(x - baseSize) + \", \" + Math.round(y + baseSize / 2.5) + \"\\n      L \" + Math.round(x - baseSize / 2.5) + \", \" + Math.round(y + baseSize / 2.5) + \"\\n      z\";\n  },\n  star: function star(x, y, size) {\n    var baseSize = 1.35 * size;\n    var angle = Math.PI / 5;\n    var starCoords = (0, _range3.default)(10).map(function (index) {\n      var length = index % 2 === 0 ? baseSize : baseSize / 2;\n      return length * Math.sin(angle * (index + 1)) + x + \",\\n        \" + (length * Math.cos(angle * (index + 1)) + y);\n    });\n    return \"M \" + starCoords.join(\"L\") + \" z\";\n  }\n};","map":null,"metadata":{},"sourceType":"script"}