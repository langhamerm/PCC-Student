{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypesArray = [{\n  key: \"array\",\n  test: _propTypes2.default.array,\n  isRequired: _propTypes2.default.array.isRequired\n}, {\n  key: \"boolean\",\n  test: _propTypes2.default.bool,\n  isRequired: _propTypes2.default.bool.isRequired\n}, {\n  key: \"function\",\n  test: _propTypes2.default.func,\n  isRequired: _propTypes2.default.func.isRequired\n}, {\n  key: \"number\",\n  test: _propTypes2.default.number,\n  isRequired: _propTypes2.default.number.isRequired\n}, {\n  key: \"object\",\n  test: _propTypes2.default.object,\n  isRequired: _propTypes2.default.array.isRequired\n}, {\n  key: \"string\",\n  test: _propTypes2.default.string,\n  isRequired: _propTypes2.default.string.isRequired\n}, {\n  key: \"node\",\n  test: _propTypes2.default.node,\n  isRequired: _propTypes2.default.node.isRequired\n}, {\n  key: \"element\",\n  test: _propTypes2.default.element,\n  isRequired: _propTypes2.default.element.isRequired\n}];\n\nvar getReactPropType = function getReactPropType(propTypeFunc) {\n  var name = \"custom\";\n  var isRequired = false;\n  propTypesArray.some(function (propType) {\n    if (propTypeFunc === propType.test) {\n      name = propType.key;\n      return true;\n    }\n\n    if (propTypeFunc === propType.isRequired) {\n      name = propType.key;\n      isRequired = true;\n      return true;\n    }\n\n    return false;\n  });\n  return {\n    name: name,\n    isRequired: isRequired\n  };\n};\n\nvar Doc = function (_Component) {\n  _inherits(Doc, _Component);\n\n  function Doc() {\n    _classCallCheck(this, Doc);\n\n    return _possibleConstructorReturn(this, (Doc.__proto__ || Object.getPrototypeOf(Doc)).apply(this, arguments));\n  }\n\n  _createClass(Doc, [{\n    key: \"render\",\n    value: function render() {\n      var propTypes = [];\n      var _props = this.props,\n          componentClass = _props.componentClass,\n          ignore = _props.ignore,\n          propDescriptionMap = _props.propDescriptionMap;\n\n      for (var propName in componentClass.propTypes) {\n        if (ignore.indexOf(propName)) {\n          propTypes.push({\n            propName: propName,\n            type: getReactPropType(componentClass.propTypes[propName]),\n            description: propDescriptionMap[propName] || \"\"\n          });\n        }\n      }\n\n      return _react2.default.createElement(\"div\", {\n        className: \"playgroundDocs\"\n      }, _react2.default.createElement(\"ul\", null, propTypes.map(function (propObj) {\n        return _react2.default.createElement(\"li\", {\n          key: propObj.propName\n        }, _react2.default.createElement(\"b\", null, propObj.propName), _react2.default.createElement(\"i\", null, \": \" + propObj.type.name), propObj.description && \" - \" + propObj.description, _react2.default.createElement(\"b\", null, \"\" + (propObj.type.isRequired ? \" required\" : \"\")));\n      })));\n    }\n  }]);\n\n  return Doc;\n}(_react.Component);\n\nDoc.defaultProps = {\n  propDescriptionMap: {},\n  ignore: []\n};\nDoc.propTypes = {\n  componentClass: _propTypes2.default.func,\n  propDescriptionMap: _propTypes2.default.object,\n  ignore: _propTypes2.default.array\n};\nexports.default = Doc;","map":null,"metadata":{},"sourceType":"script"}