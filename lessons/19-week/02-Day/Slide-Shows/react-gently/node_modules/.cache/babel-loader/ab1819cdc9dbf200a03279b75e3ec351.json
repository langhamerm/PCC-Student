{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jsx2 = require('babel-runtime/helpers/jsx');\n\nvar _jsx3 = _interopRequireDefault(_jsx2);\n\nexports.default = MarkdownSlides;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _slide = require('./slide');\n\nvar _slide2 = _interopRequireDefault(_slide);\n\nvar _markdown = require('./markdown');\n\nvar _markdown2 = _interopRequireDefault(_markdown);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar transformStringsIntoJSX = function transformStringsIntoJSX(strings) {\n  return strings.split(/\\n---\\n/).map(function (markdown, index) {\n    return (0, _jsx3.default)(_slide2.default, {}, 'md-slide-' + index, (0, _jsx3.default)(_markdown2.default, {}, void 0, markdown));\n  });\n};\n\nfunction MarkdownSlides(stringOrStrings) {\n  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    interpolations[_key - 1] = arguments[_key];\n  }\n\n  if (Array.isArray(stringOrStrings)) {\n    var strings = stringOrStrings.map(function (string, index) {\n      if (interpolations[index]) {\n        return (string + interpolations[index]).trim();\n      }\n\n      return string.trim();\n    }).join('');\n    return transformStringsIntoJSX(strings);\n  }\n\n  return transformStringsIntoJSX(stringOrStrings);\n}","map":null,"metadata":{},"sourceType":"script"}