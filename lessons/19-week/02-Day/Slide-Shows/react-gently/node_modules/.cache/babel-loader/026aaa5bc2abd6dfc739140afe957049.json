{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jsx2 = require('babel-runtime/helpers/jsx');\n\nvar _jsx3 = _interopRequireDefault(_jsx2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactTypography = require('react-typography');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Typeface = function (_Component) {\n  (0, _inherits3.default)(Typeface, _Component);\n\n  function Typeface() {\n    (0, _classCallCheck3.default)(this, Typeface);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n  }\n\n  Typeface.prototype.getChildContext = function getChildContext() {\n    return {\n      typeface: {\n        fontFamily: this.props.googleFont || this.props.font || '',\n        fontWeight: this.props.weight,\n        fontStyle: this.props.italic ? 'italic' : 'normal'\n      }\n    };\n  };\n\n  Typeface.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        googleFont = _props.googleFont,\n        _props$weight = _props.weight,\n        weight = _props$weight === undefined ? 400 : _props$weight,\n        _props$italic = _props.italic,\n        italic = _props$italic === undefined ? false : _props$italic,\n        styles = _props.styles;\n\n    if (typeof googleFont !== 'undefined' && googleFont.length > 0) {\n      var styleSuffix = italic ? 'i' : '';\n      var config = {\n        title: '' + googleFont,\n        options: {\n          googleFonts: [{\n            name: googleFont,\n            styles: styles || ['' + weight + styleSuffix]\n          }]\n        }\n      };\n      return (0, _jsx3.default)('div', {}, void 0, (0, _jsx3.default)(_reactTypography.GoogleFont, {\n        typography: config\n      }), children);\n    } else {\n      return (0, _jsx3.default)('div', {}, void 0, children);\n    }\n  };\n\n  return Typeface;\n}(_react.Component);\n\nTypeface.childContextTypes = {\n  typeface: _propTypes2.default.object\n};\nexports.default = Typeface;","map":null,"metadata":{},"sourceType":"script"}