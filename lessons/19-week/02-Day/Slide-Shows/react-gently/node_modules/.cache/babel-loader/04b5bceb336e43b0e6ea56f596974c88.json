{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _jsx2 = require('babel-runtime/helpers/jsx');\n\nvar _jsx3 = _interopRequireDefault(_jsx2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _timeComponents = require('./time-components');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar startTime = function startTime(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours %= 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n  var strTime = hours + ' : ' + minutes + ' : ' + seconds + ' ' + ampm;\n  return strTime;\n};\n\nvar Clock = function (_Component) {\n  (0, _inherits3.default)(Clock, _Component);\n\n  function Clock() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Clock);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      time: new Date(Date.now())\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  Clock.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.interval = setInterval(function () {\n      _this2.setState({\n        time: new Date()\n      });\n    }, 1000);\n  };\n\n  Clock.prototype.componentWillUnmount = function componentWillUnmount() {\n    clearInterval(this.interval);\n  };\n\n  Clock.prototype.render = function render() {\n    return (0, _jsx3.default)(_timeComponents.Clock, {}, void 0, startTime(this.state.time));\n  };\n\n  return Clock;\n}(_react.Component);\n\nexports.default = Clock;","map":null,"metadata":{},"sourceType":"script"}