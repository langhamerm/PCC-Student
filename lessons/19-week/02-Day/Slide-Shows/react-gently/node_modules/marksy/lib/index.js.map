{"version":3,"sources":["../src/index.js"],"names":["marksy","options","components","renderer","Renderer","tree","elements","nextElementId","toc","getTocPosition","level","currentLevel","children","length","populateInlineContent","content","contentArray","split","extractedElements","map","text","elementIdMatch","match","splice","indexOf","decode","addElement","tag","props","elementId","inlineContent","Array","isArray","createElement","Object","assign","key","push","code","language","html","className","presets","keys","Function","e","paragraph","blockquote","link","href","title","br","hr","strong","del","em","heading","id","replace","toLowerCase","lastToc","tocPosition","list","body","ordered","listitem","table","header","thead","tbody","tablerow","tablecell","flag","align","undefined","codespan","image","src","alt","compile","markedOptions","smartypants"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport marked from 'marked';\nimport he from 'he';\nimport {transform} from 'babel-standalone';\n\nexport function marksy (options = {}) {\n  options.components = options.components || {};\n\n  const renderer = new marked.Renderer();\n  let tree = null;\n  let elements = null;\n  let nextElementId = null;\n  let toc = null;\n\n  function getTocPosition (toc, level) {\n    var currentLevel = toc.children;\n    while (true) {\n      if (!currentLevel.length || currentLevel[currentLevel.length - 1].level === level) {\n        return currentLevel;\n      } else {\n        currentLevel = currentLevel[currentLevel.length - 1].children;\n      }\n    }\n  }\n\n  function populateInlineContent (content = '') {\n    const contentArray = content.split(/(\\{\\{.*?\\}\\})/);\n    const extractedElements = contentArray.map(function (text) {\n      const elementIdMatch = text.match(/\\{\\{(.*)\\}\\}/);\n      if (elementIdMatch) {\n        tree.splice(tree.indexOf(elements[elementIdMatch[1]]), 1)\n        return elements[elementIdMatch[1]];\n      } else if (text != '') {\n        return he.decode(text);\n      }\n\n      return null;\n    });\n\n    return extractedElements;\n  }\n\n  function addElement (tag, props = {}, children) {\n    const elementId = nextElementId++;\n    let inlineContent = null;\n\n    if (children) {\n      inlineContent = Array.isArray(children) ? children.map(populateInlineContent) : populateInlineContent(children)\n    }\n\n    elements[elementId] = React.createElement(options[tag] || tag, Object.assign({\n      key: elementId\n    }, props), inlineContent);\n\n    tree.push(elements[elementId]);\n\n    return `{{${elementId}}}`;\n  }\n\n  renderer.code = (code, language) => {\n    if (language === 'marksy') {\n      return renderer.html(code)\n    } else {\n      const elementId = nextElementId++;\n\n      elements[elementId] = React.createElement('pre', {\n        key: elementId,\n        className: `language-${language}`\n      }, React.createElement('code', {\n        className: `language-${language}`\n      }, code));\n\n      tree.push(elements[elementId]);\n\n      return `{{${elementId}}}`\n    }\n  };\n\n  renderer.html = function (html) {\n    try {\n      const code = transform(html, {\n        presets: ['react']\n      }).code;\n      const components = Object.keys(options.components).map(function (key) {\n        return options.components[key];\n      });\n\n      tree.push(React.createElement(function () {\n        return new Function('React', ...Object.keys(options.components), `return ${code}`)(React, ...components);\n      }, {key: nextElementId++}));\n    } catch (e) {}\n  };\n\n  renderer.paragraph = (text) => addElement('p', null, text)\n\n  renderer.blockquote = (text) => addElement('blockquote', null, text);\n\n  renderer.link = (href, title, text) => addElement('a', {href, title}, text);\n\n  renderer.br = () => addElement('br');\n\n  renderer.hr = () => addElement('hr');\n\n  renderer.strong = (text) => addElement('strong', null, text);\n\n  renderer.del = (text) => addElement('del', null, text);\n\n  renderer.em = (text) => addElement('em', null, text);\n\n  renderer.heading = (text, level) => {\n    const id = text.replace(/\\s/g, '-').toLowerCase();\n    const lastToc = toc[toc.length - 1];\n\n    if (!lastToc || lastToc.level > level) {\n      toc.push({\n        id: id,\n        title: text,\n        level: level,\n        children: []\n      });\n    } else {\n      const tocPosition = getTocPosition(lastToc, level);\n\n      tocPosition.push({\n        id: id,\n        title: text,\n        level: level,\n        children: []\n      });\n    }\n\n    return addElement(`h${level}`, null, text);\n  }\n\n  renderer.list = (body, ordered) => {\n    return addElement(ordered ? 'ol' : 'ul', null, body);\n  }\n\n  renderer.listitem = (text) => {\n    return addElement('li', null, text);\n  }\n\n  renderer.table = (header, body) => {\n    return addElement('table', null, [\n      addElement('thead', null, header),\n      addElement('tbody', null, body)\n    ]);\n  }\n\n  renderer.thead = (content) => {\n    return addElement('thead', null, content)\n  }\n\n  renderer.tbody = (content) => {\n    return addElement('tbody', null, content)\n  }\n\n  renderer.tablerow = (content) => {\n    return addElement('tr', null, content)\n  }\n\n  renderer.tablecell = (content, flag) => {\n    const tag = flag.header ? 'th' : 'td'\n    return addElement('tr', {className: flag.align ? `text-${flag.align}` : undefined}, content)\n  }\n\n  renderer.codespan = (text) => {\n    return addElement('code', null, text)\n  }\n\n  renderer.image = (href, title, text) => {\n    return addElement('img', {src: href, alt: text})\n  }\n\n  return function compile (content, markedOptions = {}) {\n    tree = [];\n    elements = {};\n    toc = [];\n    nextElementId = 0;\n    marked(content, Object.assign({renderer: renderer, smartypants: true}, markedOptions));\n\n    return {tree, toc};\n  };\n}\n\n\nexport default function (options) {\n  return marksy(options)\n};\n"]}